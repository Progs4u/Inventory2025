mixin itemNotes(item, itemNotes)
  div(class="container mx-auto px-4 py-8")
    h2(class="text-xl font-bold text-orange-900 mb-4") Notes
    button(onclick="toggleNoteModal('addNote')" class="bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700 mb-4") Add Note
    
    div(class="space-y-4" id="notesContainer")
      each note in itemNotes || []
        div(class="bg-white rounded-lg shadow-lg p-6" data-note-id=note.id)
          div(class="flex justify-between items-center mb-2")
            h3(class="text-lg font-semibold")= note.title
            div(class="flex gap-2")
              span(class="text-sm text-gray-500")= new Date(note.created_at).toLocaleDateString()
              button(onclick=`editNote('${note.id}')` class="text-blue-600 hover:text-blue-800") Edit
              button(onclick=`deleteNote('${note.id}')` class="text-red-600 hover:text-red-800") Delete
          div(class="prose max-w-none")!= note.content
          if note.images && note.images.length
            div(class="mt-4 grid grid-cols-2 gap-4")
              each image in note.images
                img(src=image alt="" class="rounded-lg")

    div(id="addNote" class="modal hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center")
      div(class="bg-white rounded-lg p-6 w-full max-w-4xl")
        h2(class="text-xl font-bold text-orange-900 mb-4") Add Note
        form(action=`/items/${item.id}/notes` method="POST" enctype="multipart/form-data")
          div(class="mb-4")
            input(type="text" name="title" placeholder="Note Title" class="w-full rounded-md border-gray-300 shadow-sm focus:ring-orange-500 focus:border-orange-500")
          div(class="mb-4")
            textarea(id="noteEditor" name="content" class="w-full rounded-md border-gray-300 shadow-sm focus:ring-orange-500 focus:border-orange-500")
          div(class="flex justify-end space-x-3")
            button(type="button" onclick="toggleNoteModal('addNote')" class="px-4 py-2 bg-gray-300 hover:bg-gray-400 rounded") Cancel
            button(type="submit" class="px-4 py-2 bg-orange-600 hover:bg-orange-700 text-white rounded") Save

mixin itemDetails(item)
  div(class="container mx-auto px-4 py-8")
    div(class="flex flex-wrap -mx-4")
      div(class="w-full md:w-1/2 px-4 mb-8")
        div(class="bg-white rounded-lg shadow-lg p-6")
          h1(class="text-2xl font-bold text-orange-900 mb-4")= item.name
          div(class="space-y-4")
            div
              span(class="font-semibold") Category: 
              span= item.category
            div
              span(class="font-semibold") Description: 
              p(class="whitespace-pre-wrap")= item.description
            div
              span(class="font-semibold") Quantity: 
              span= `${item.quantity} ${item.unit}`
            //- New QR Status Section
            div
              span(class="font-semibold") QR Assignment:
              if item.qr_uuid
                div(class="mt-2 space-y-2")
                  span(class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800")
                    svg(class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 20 20")
                      path(fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd")
                    | QR: #{item.qr_uuid}
                  if item.qr_status
                      span(class=`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium 
                          ${item.qr_status === 'available' ? 'bg-green-100 text-green-800' :
                            item.qr_status === 'deployed' ? 'bg-blue-100 text-blue-800' :
                            'bg-red-100 text-red-800'}`)
                          | Status: #{item.qr_status}

                  if item.qr_assigned_at
                    span(class="text-sm text-gray-500")
                      | Assigned: #{new Date(item.qr_assigned_at).toLocaleDateString()}

                  //- Add this inside the QR Assignment section after the existing QR info
                  if item.qr_uuid
                      div(class="mt-4 flex gap-3")
                        //- Available Button (Green)
                        form(action=`/items/${item.id}/qr/status` method="POST" class="inline")
                            input(type="hidden" name="status" value="available")
                            button(type="submit" 
                                class=`px-4 py-2 rounded-full text-sm font-medium 
                                    ${item.qr_status === 'available' ? 
                                    'bg-green-600 text-white' : 
                                    'bg-gray-200 hover:bg-green-600 hover:text-white'}`)
                                | Set Available

                        //- Deployed Button (Blue)
                        form(action=`/items/${item.id}/qr/status` method="POST" class="inline")
                            input(type="hidden" name="status" value="deployed")
                            button(type="submit" 
                                class=`px-4 py-2 rounded-full text-sm font-medium 
                                    ${item.qr_status === 'deployed' ? 
                                    'bg-blue-600 text-white' : 
                                    'bg-gray-200 hover:bg-blue-600 hover:text-white'}`)
                                | Set Deployed

                        //- Expended Button (Red)
                        form(action=`/items/${item.id}/qr/status` method="POST" class="inline")
                            input(type="hidden" name="status" value="expended")
                            button(type="submit" 
                                class=`px-4 py-2 rounded-full text-sm font-medium 
                                    ${item.qr_status === 'expended' ? 
                                    'bg-red-600 text-white' : 
                                    'bg-gray-200 hover:bg-red-600 hover:text-white'}`)
                                | Set Expended
              else
                div(class="mt-2")
                  span(class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800")
                    svg(class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 20 20")
                      path(fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd")
                    | Not Assigned to QR
      
      div(class="w-full md:w-1/2 px-4 mb-8")
        div(class="bg-white rounded-lg shadow-lg p-6")
          if item.image_url
            img(src=item.image_url alt=item.name class="w-full h-auto rounded-lg")
          else
            div(class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center")
              form(action=`/items/${item.id}/image` method="POST" enctype="multipart/form-data")
                input(type="file" name="item_image" accept="image/*" class="mb-4")
                button(type="submit" class="bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700") Upload Image

    div(class="mt-8")
      h2(class="text-xl font-bold text-orange-900 mb-4") Location Trail
      div(class="flex flex-wrap items-center gap-4")
        div(class=`p-4 rounded-lg shadow ${item.room_name ? 'bg-green-50' : 'bg-gray-100'}`)
          span(class="font-semibold") Room: 
          span= item.room_name || 'Not Set'
        svg(xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor")
          path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6")
        div(class=`p-4 rounded-lg shadow ${item.storage_name ? 'bg-green-50' : 'bg-gray-100'}`)
          span(class="font-semibold") Storage: 
          span= item.storage_name || 'Not Set'
        svg(xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor")
          path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6")
        div(class=`p-4 rounded-lg shadow ${item.container_name ? 'bg-green-50' : 'bg-gray-100'}`)
          span(class="font-semibold") Container: 
          span= item.container_name || 'Not Set'

